openapi: 3.0.0
info:
  title: Tech Academy API
  version: '1.0.0'
paths:
  /users:
    get:
      summary: Lista todos os usuários
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuários retornada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'


    post:
      summary: Cria um novo usuário
      security:
        - bearerAuth: []
      requestBody:
        description: Dados do usuário a ser criado.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuário criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'



  /users/{id}:
    get:
      summary: Retorna um usuário específico pelo ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do usuário.
      responses:
        '200':
          description: Usuário encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado.



    put:
      summary: Atualiza os dados de um usuário pelo ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do usuário a ser atualizado.
      requestBody:
        description: Dados atualizados do usuário.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuário atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado.



    delete:
      summary: Exclui um usuário pelo ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do usuário a ser removido.
      responses:
        '204':
          description: Usuário excluído com sucesso.
        '404':
          description: Usuário não encontrado.














  /login:
    post:
      summary: Faz login para um novo usuario
      security:
        - bearerAuth: []
      requestBody:
        description: Dados para Login
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          description: Usuário logado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'

















components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "João"
        cpf:
          type: string
          example: "123.456.789-00"
        email:
          type: string
          example: "email@exemplo.com"
        password:
          type: string
          example: "senha123"
        admin:
          type: boolean
          example: false
    UserList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'





    Login:
      type: object
      properties:
        email:
          type: string
          example: "email"
        password:
          type: string
          example: "password"
    LoginList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/Login'




  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT